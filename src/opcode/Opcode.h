///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *	OPCODE - Optimized Collision Detection
 *	Copyright (C) 2001 Pierre Terdiman
 *	Homepage: http://www.codercorner.com/Opcode.htm
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Main file for Opcode.dll.
 *	\file		Opcode.h
 *	\author		Pierre Terdiman
 *	\date		March, 20, 2001
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef __OPCODE_H__
#define __OPCODE_H__

// stddef.h and stdarg.h must be included before Opcode headers 
// as they latermay not compile being not able to find types in std::
#include <stddef.h>
#include <stdarg.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Things to help us compile on non-windows platforms

#if defined(__APPLE__) || defined(__MACOSX__)
#if __APPLE_CC__ < 1495
#define sqrtf sqrt
#define sinf sin
#define cosf cos
#define acosf acos
#define asinf asin
#endif
#endif

#ifndef _MSC_VER
#ifndef __int64
#define __int64 long long int
#endif
#ifndef __stdcall /* this is defined in MinGW and CygWin, so avoid the warning */
#define __stdcall /* */
#endif
#endif
#pragma warning(disable : 4267)

//#define OPCODE_EXPORTS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Compilation messages
#ifdef _MSC_VER
	//#if !defined(OPCODE_EXPORTS)
	//	#pragma message("Compiling OPCODE")
	//#elif defined(OPCODE_EXPORTS)
	//	// #pragma message("Using OPCODE")
	//	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//	// Automatic linking
	//	#ifndef BAN_OPCODE_AUTOLINK
	//		#ifdef _DEBUG
	//			#pragma comment(lib, "Opcode_D.lib")
	//		#else
	//			#pragma comment(lib, "Opcode.lib")
	//		#endif
	//	#endif
	//#endif
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Preprocessor

#ifdef ICE_DLL
	#ifdef OPCODE_EXPORTS
		#define OPCODE_API __declspec(dllexport)
	#else
		#define OPCODE_API __declspec(dllimport)
	#endif
#else
		#define OPCODE_API
#endif
	#include <vector>
	#include <array>
	
	#include "opcode/OPC_Settings.h"
	#include "opcode/OPC_IceHook.h"

	namespace Opcode
	{
		// Bulk-of-the-work
		#include "opcode/OPC_Common.h"
		#include "opcode/OPC_MeshInterface.h"
		// Builders
		#include "opcode/OPC_TreeBuilders.h"
		// Trees
		#include "opcode/OPC_AABBTree.h"
		#include "opcode/OPC_OptimizedTree.h"
		// Models
		#include "opcode/OPC_BaseModel.h"
		#include "opcode/OPC_Model.h"
		#include "opcode/OPC_HybridModel.h"
		// Colliders
		#include "opcode/OPC_Collider.h"
		#include "opcode/OPC_VolumeCollider.h"
		#include "opcode/OPC_TreeCollider.h"
		//#include "OPC_RayCollider.h"
		//#include "OPC_SphereCollider.h"
		#include "opcode/OPC_OBBCollider.h"
		#include "opcode/OPC_AABBCollider.h"
		//#include "OPC_LSSCollider.h"
		//#include "OPC_PlanesCollider.h"
		// Usages
		//#include "OPC_Picking.h"
		
		FUNCTION OPCODE_API bool InitOpcode();
		FUNCTION OPCODE_API bool CloseOpcode();
	}

#endif // __OPCODE_H__
